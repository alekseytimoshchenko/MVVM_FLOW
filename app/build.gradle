apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

def libs = rootProject.ext.libraries
def config = rootProject.ext.configuration
def test = rootProject.ext.test

android {
    compileSdkVersion config.compileVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //android
    implementation "androidx.appcompat:appcompat:${libs.supportVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${libs.constraintLayout}"

    //Stetho
    implementation "com.facebook.stetho:stetho:${libs.stetho}"

    //Crashlitics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }

    //Timber
    implementation "com.jakewharton.timber:timber:${libs.timber}"

    //test
    testImplementation "junit:junit:${test.junit}"
    androidTestImplementation "androidx.test:runner:${test.runner}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:${test.espresso}"
}
