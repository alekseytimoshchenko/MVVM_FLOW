apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def libs = rootProject.ext.libraries
def config = rootProject.ext.configuration
def test = rootProject.ext.test

android {
    compileSdkVersion config.compileVersion

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/3/"'
        }
        debug {
            buildConfigField 'String', 'BASE_URL', '"https://api.themoviedb.org/3/"'
        }
    }

    //https://medium.com/@shishir_13/layouts-in-different-folders-in-android-app-98468bd507c7
    sourceSets {
        main {
            res.srcDirs =
                    [
                            file("src/main/res/layouts/").listFiles(),
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }
    buildToolsVersion '28.0.2'
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //android
    implementation "androidx.appcompat:appcompat:${libs.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${libs.constraintLayout}"

    //Dependency Injection
//    implementation "com.google.dagger:dagger:${libs.daggerVersion}"
//    annotationProcessor "com.google.dagger:dagger-compiler:${libs.daggerVersion}"

    //RxJava2
    implementation "io.reactivex.rxjava2:rxjava:${libs.rx2Java}"
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rx2Android}"

    //Architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:${libs.lifecycle}"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:${libs.lifecycle}"

    //test
    testImplementation "junit:junit:${test.junit}"
    androidTestImplementation "androidx.test:runner:${test.runner}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:${test.espresso}"
}
